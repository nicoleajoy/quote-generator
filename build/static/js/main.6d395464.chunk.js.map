{"version":3,"sources":["QuoteCard.js","App.js","index.js"],"names":["QuoteCard","content","author","color","handleClick","tweet","className","title","style","backgroundColor","onClick","navigator","clipboard","writeText","href","alt","App","useState","setContent","setAuthor","isLoading","setIsLoading","useEffect","generateQuote","setbackground","fetch","then","response","json","catch","err","console","error","document","querySelector","Math","random","ReactDOM","render","getElementById"],"mappings":"sNAqDeA,EAjDG,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACrCC,EAAK,iDAA6CJ,EAA7C,aAAyDC,GAEpE,OACE,sBAAKI,UAAU,aAAf,UACE,uBACA,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAaA,UAAU,iBACtBL,EACD,cAAC,IAAD,CAAcK,UAAU,oBAE1B,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,IADF,IACgBJ,KAEhB,uBAEA,sBAAKI,UAAU,kBAAf,UACE,wBACEC,MAAM,oBACND,UAAU,eACVE,MAAO,CAAEC,gBAAiBN,GAC1BO,QAAS,WACPC,UAAUC,UAAUC,UAAU,IAAMZ,EAAN,MAAwBC,IAL1D,SAQE,mBAAGI,UAAU,kBAEf,mBAAGQ,KAAMT,EAAOU,IAAI,aAApB,SACE,wBACER,MAAM,QACND,UAAU,eACVE,MAAO,CAAEC,gBAAiBN,GAH5B,SAKE,mBAAGG,UAAU,sBAGjB,wBACEC,MAAM,iBACND,UAAU,uBACVI,QAASN,EACTI,MAAO,CAAEC,gBAAiBN,GAJ5B,SAME,mBAAGG,UAAU,2BCgBRU,EA3DH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAA4BD,mBAAS,IAArC,mBAAOf,EAAP,KAAeiB,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRD,GAAa,GACbE,IACAC,MACC,IAEH,IAAMD,EAAgB,WACpBF,GAAa,GACbI,MAAM,kCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,IAAQ1B,EAAoB0B,EAApB1B,QAASC,EAAWyB,EAAXzB,OACjBgB,EAAWjB,GACXkB,EAAUjB,GACVmB,GAAa,MAEdQ,OAAM,SAACC,GACNC,QAAQC,MAAMF,KACb,KASDN,EAAgB,WACpBS,SAASC,cAAc,QAAQ1B,MAAMC,gBACnC,OACA,IAAM0B,KAAKC,SACX,KACC,GAAK,GAAKD,KAAKC,UAChB,MACC,GAAK,GAAKD,KAAKC,UAChB,MAGJ,OACE,qBAAK9B,UAAU,MAAf,SACGc,EACC,sBAEA,cAAC,EAAD,CACEnB,QAASA,EACTC,OAAQA,EACRE,YAzBY,WAClBiB,GAAa,GACbE,IACAC,KAuBMrB,MAAO8B,SAASC,cAAc,QAAQ1B,MAAMC,qB,YCjDtD4B,IAASC,OAAO,cAAC,EAAD,IAASL,SAASM,eAAe,W","file":"static/js/main.6d395464.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { FaQuoteLeft, FaQuoteRight } from \"react-icons/fa\"\r\nimport { BsDashLg } from \"react-icons/bs\"\r\n\r\nconst QuoteCard = ({ content, author, color, handleClick }) => {\r\n  const tweet = `https://twitter.com/intent/tweet?text=\"${content}\" ${author}`\r\n\r\n  return (\r\n    <div className=\"quote-card\">\r\n      <hr />\r\n      <div className=\"quote-content\">\r\n        <FaQuoteLeft className=\"quote-symbol\" />\r\n        {content}\r\n        <FaQuoteRight className=\"quote-symbol\" />\r\n      </div>\r\n      <div className=\"quote-author\">\r\n        <BsDashLg /> {author}\r\n      </div>\r\n      <hr />\r\n\r\n      <div className=\"flexbox-buttons\">\r\n        <button\r\n          title=\"Copy to Clipboard\"\r\n          className=\"button media\"\r\n          style={{ backgroundColor: color }}\r\n          onClick={() => {\r\n            navigator.clipboard.writeText(`\"` + content + `\" -` + author)\r\n          }}\r\n        >\r\n          <i className=\"fa fa-clone\"></i>\r\n        </button>\r\n        <a href={tweet} alt=\"tweet this\">\r\n          <button\r\n            title=\"Tweet\"\r\n            className=\"button media\"\r\n            style={{ backgroundColor: color }}\r\n          >\r\n            <i className=\"fa fa-twitter\"></i>\r\n          </button>\r\n        </a>\r\n        <button\r\n          title=\"Generate Quote\"\r\n          className=\"button flexbox-right\"\r\n          onClick={handleClick}\r\n          style={{ backgroundColor: color }}\r\n        >\r\n          <i className=\"fa fa-refresh\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuoteCard\r\n","import React, { useState, useEffect } from \"react\"\nimport QuoteCard from \"./QuoteCard\"\n\nconst App = () => {\n  const [content, setContent] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    setIsLoading(true)\n    generateQuote()\n    setbackground()\n  }, [])\n\n  const generateQuote = () => {\n    setIsLoading(true)\n    fetch(\"https://api.quotable.io/random\")\n      .then((response) => response.json())\n      .then((response) => {\n        const { content, author } = response\n        setContent(content)\n        setAuthor(author)\n        setIsLoading(false)\n      })\n      .catch((err) => {\n        console.error(err)\n      }, [])\n  }\n\n  const handleClick = () => {\n    setIsLoading(true)\n    generateQuote()\n    setbackground()\n  }\n\n  const setbackground = () => {\n    document.querySelector(\"body\").style.backgroundColor =\n      \"hsl(\" +\n      360 * Math.random() +\n      \",\" +\n      (25 + 25 * Math.random()) +\n      \"%,\" +\n      (80 + 10 * Math.random()) +\n      \"%)\"\n  }\n\n  return (\n    <div className=\"app\">\n      {isLoading ? (\n        \"Generating quote...\"\n      ) : (\n        <QuoteCard\n          content={content}\n          author={author}\n          handleClick={handleClick}\n          color={document.querySelector(\"body\").style.backgroundColor}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./style.css\"\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}